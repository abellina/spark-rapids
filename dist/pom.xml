<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2020-2021, NVIDIA CORPORATION.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.nvidia</groupId>
    <artifactId>rapids-4-spark-parent</artifactId>
    <version>21.08.0-SNAPSHOT</version>
  </parent>
  <artifactId>rapids-4-spark_2.12</artifactId>
  <name>RAPIDS Accelerator for Apache Spark Distribution</name>
  <description>Creates the distribution package of the RAPIDS plugin for Apache Spark</description>

  <dependencies>
    <dependency>
       <groupId>com.nvidia</groupId>
       <artifactId>rapids-4-spark-sql_${scala.binary.version}</artifactId>
       <version>${project.version}</version>
    </dependency>
    <dependency>
       <groupId>com.nvidia</groupId>
       <artifactId>rapids-4-spark-shuffle_${scala.binary.version}</artifactId>
       <version>${project.version}</version>
    </dependency>
    <dependency>
       <groupId>com.nvidia</groupId>
       <artifactId>rapids-4-spark-shims-aggregator_${scala.binary.version}</artifactId>
       <version>${project.version}</version>
    </dependency>
    <dependency>
       <groupId>com.nvidia</groupId>
       <artifactId>rapids-4-spark-udf_${scala.binary.version}</artifactId>
       <version>${project.version}</version>
    </dependency>
    <dependency>
       <!-- required for conf generation script -->
       <groupId>org.apache.spark</groupId>
       <artifactId>spark-sql_${scala.binary.version}</artifactId>
       <scope>provided</scope>
    </dependency>
    <dependency>
      <!-- required for conf generation script -->
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-hive_${scala.binary.version}</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
	  <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
	  </transformers>
          <shadedArtifactAttached>false</shadedArtifactAttached>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <createSourcesJar>true</createSourcesJar>
        </configuration>
        <executions>
          <execution>
            <id>relocate-shim302</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadeSourcesContent>true</shadeSourcesContent>
              <artifactSet>
                <includes>
                  <include>*:rapids-4-spark-shims-spark302_${scala.binary.version}:*</include>
                </includes>
                <excludes>
                  <exclude>org.apache.spark:*</exclude>
                </excludes>
              </artifactSet>
              <relocations>
                <relocation>
                  <pattern></pattern>
                  <shadedPattern>nv.shim302.</shadedPattern>
                  <excludes>
                    <exclude>com.nvidia.spark.SQLPlugin*</exclude>
                    <exclude>com.nvidia.spark.rapids.SQLExecPlugin*</exclude>
                    <exclude>com.nvidia.spark.udf.Plugin*</exclude>
                    <exclude>com.nvidia.spark.rapids.ShimLoader*</exclude>
                  </excludes>
                </relocation>
              </relocations>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>update_config</id>
            <phase>verify</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <launchers>
                <launcher>
                  <id>update_rapids_config</id>
                  <mainClass>com.nvidia.spark.rapids.RapidsConf</mainClass>
                  <args>
                    <arg>${project.basedir}/../docs/configs.md</arg>
                  </args>
                </launcher>
              </launchers>
            </configuration>
          </execution>
          <execution>
            <id>update_supported</id>
            <phase>verify</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <launchers>
                <launcher>
                  <id>update_rapids_support</id>
                  <mainClass>com.nvidia.spark.rapids.SupportedOpsDocs</mainClass>
                  <args>
                    <arg>${project.basedir}/../docs/supported_ops.md</arg>
                  </args>
                </launcher>
              </launchers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>pre-merge</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>if_modified_files</id>
                <phase>verify</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>bash</executable>
                  <commandlineArgs>-c 'export MODIFIED=$(git status --porcelain | grep "^ M"); [[ -z $MODIFIED ]] &amp;&amp; exit 0 || { echo -e "found modified files during mvn verify:\n$MODIFIED"; exit 1;}'</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
    </profile>
  </profiles>

</project>
